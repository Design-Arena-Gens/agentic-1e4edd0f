'use client'

import { useState } from 'react'

export default function Home() {
  const [language, setLanguage] = useState<'hi' | 'en'>('hi')
  const [htmlCode, setHtmlCode] = useState(`<!DOCTYPE html>
<html>
<head>
  <title>My Website</title>
</head>
<body>
  <h1>Hello World!</h1>
  <p>Yeh mera pehla website hai!</p>
</body>
</html>`)

  const content = {
    hi: {
      title: '‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ',
      subtitle: '‡§Ö‡§™‡§®‡•Ä ‡§ñ‡•Å‡§¶ ‡§ï‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§¨‡§®‡§æ‡§®‡§æ ‡§∏‡•Ä‡§ñ‡•á‡§Ç - ‡§Ü‡§∏‡§æ‡§® ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç',
      intro: '‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§¨‡§®‡§æ‡§®‡§æ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?',
      introText: '‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§è‡§ï ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§™‡•á‡§ú ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡•ã ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§™‡§∞ ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡•á ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ HTML, CSS ‡§î‡§∞ JavaScript ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§',
      stepsTitle: '‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§ö‡§∞‡§£',
      steps: [
        {
          title: 'HTML ‡§∏‡•Ä‡§ñ‡•á‡§Ç',
          desc: 'HTML ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§ï‡•Ä ‡§∏‡§Ç‡§∞‡§ö‡§®‡§æ ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π ‡§∏‡§¨‡§∏‡•á ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§î‡§∞ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§π‡•à ‡§ú‡•ã ‡§π‡§∞ ‡§µ‡•á‡§¨ ‡§™‡•á‡§ú ‡§ï‡•Ä ‡§∞‡•Ä‡§¢‡§º ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§'
        },
        {
          title: 'CSS ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
          desc: 'CSS ‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§ï‡•ã ‡§∏‡•Å‡§Ç‡§¶‡§∞ ‡§î‡§∞ ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§∞‡§Ç‡§ó, ‡§´‡•â‡§®‡•ç‡§ü, ‡§≤‡•á‡§Ü‡§â‡§ü - ‡§∏‡§¨ CSS ‡§∏‡•á ‡§§‡§Ø ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§'
        },
        {
          title: 'JavaScript ‡§∏‡•á ‡§ú‡•Ä‡§µ‡§® ‡§¶‡•á‡§Ç',
          desc: 'JavaScript ‡§∏‡•á ‡§Ü‡§™‡§ï‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§á‡§Ç‡§ü‡§∞‡§è‡§ï‡•ç‡§ü‡§ø‡§µ ‡§¨‡§®‡§§‡•Ä ‡§π‡•à‡•§ ‡§¨‡§ü‡§®, ‡§è‡§®‡§ø‡§Æ‡•á‡§∂‡§® ‡§î‡§∞ ‡§°‡§æ‡§Ø‡§®‡§æ‡§Æ‡§ø‡§ï ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§π ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à‡•§'
        },
        {
          title: '‡§°‡•ã‡§Æ‡•á‡§® ‡§î‡§∞ ‡§π‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó',
          desc: '‡§Ö‡§™‡§®‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§ï‡•ã ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§™‡§∞ ‡§≤‡§æ‡§á‡§µ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•ã‡§Æ‡•á‡§® ‡§®‡§æ‡§Æ ‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§π‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§∏‡§∞‡•ç‡§µ‡§ø‡§∏ ‡§ö‡•Å‡§®‡•á‡§Ç‡•§'
        },
        {
          title: '‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
          desc: '‡§Ö‡§™‡§®‡•Ä ‡§´‡§æ‡§á‡§≤‡•á‡§Ç ‡§π‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§™‡§∞ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç‡•§ Vercel, Netlify ‡§Ø‡§æ GitHub Pages ‡§ú‡•à‡§∏‡•Ä ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç‡•§'
        },
        {
          title: '‡§ü‡•á‡§∏‡•ç‡§ü ‡§î‡§∞ ‡§≤‡•â‡§®‡•ç‡§ö ‡§ï‡§∞‡•á‡§Ç',
          desc: '‡§∏‡§¨ ‡§ï‡•Å‡§õ ‡§ö‡•á‡§ï ‡§ï‡§∞‡•á‡§Ç - ‡§≤‡§ø‡§Ç‡§ï, ‡§á‡§Æ‡•á‡§ú, ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ view‡•§ ‡§∏‡§¨ ‡§∏‡§π‡•Ä ‡§π‡•ã ‡§§‡•ã ‡§Ö‡§™‡§®‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∂‡•á‡§Ø‡§∞ ‡§ï‡§∞‡•á‡§Ç!'
        }
      ],
      toolsTitle: '‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§ü‡•Ç‡§≤‡•ç‡§∏',
      tools: [
        { name: 'VS Code', desc: '‡§ï‡•ã‡§° ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§¨‡§∏‡•á ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§è‡§°‡§ø‡§ü‡§∞' },
        { name: 'Chrome DevTools', desc: '‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§°‡•Ä‡§¨‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è' },
        { name: 'GitHub', desc: '‡§ï‡•ã‡§° ‡§ï‡•ã ‡§∏‡•á‡§µ ‡§î‡§∞ ‡§∂‡•á‡§Ø‡§∞ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è' },
        { name: 'Figma', desc: '‡§°‡§ø‡§ú‡§æ‡§á‡§® ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è' }
      ],
      demoTitle: '‡§≤‡§æ‡§á‡§µ ‡§°‡•á‡§Æ‡•ã - ‡§Ö‡§™‡§®‡§æ HTML ‡§ï‡•ã‡§° ‡§ü‡•ç‡§∞‡§æ‡§à ‡§ï‡§∞‡•á‡§Ç',
      runButton: '‡§ï‡•ã‡§° ‡§∞‡§® ‡§ï‡§∞‡•á‡§Ç',
      resourcesTitle: '‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®',
      resources: [
        'W3Schools - HTML, CSS, JavaScript ‡§∏‡•Ä‡§ñ‡•á‡§Ç',
        'YouTube - ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§µ‡•á‡§¨ ‡§°‡•á‡§µ‡§≤‡§™‡§Æ‡•á‡§Ç‡§ü ‡§ü‡•ç‡§Ø‡•Ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§≤',
        'FreeCodeCamp - ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§°‡§ø‡§Ç‡§ó ‡§∏‡•Ä‡§ñ‡•á‡§Ç',
        'MDN Web Docs - ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§°‡•â‡§ï‡•ç‡§Ø‡•Ç‡§Æ‡•á‡§Ç‡§ü‡•á‡§∂‡§®'
      ]
    },
    en: {
      title: 'How to Create a Website',
      subtitle: 'Learn to build your own website - step by step',
      intro: 'What is a Website?',
      introText: 'A website is a digital page displayed on the internet. We use HTML, CSS, and JavaScript to create it.',
      stepsTitle: 'Steps to Create a Website',
      steps: [
        {
          title: 'Learn HTML',
          desc: 'HTML creates the structure of your website. It\'s the most fundamental language that forms the backbone of every web page.'
        },
        {
          title: 'Add CSS',
          desc: 'CSS makes your website beautiful and attractive. Colors, fonts, layouts - everything is controlled by CSS.'
        },
        {
          title: 'Bring Life with JavaScript',
          desc: 'JavaScript makes your website interactive. It\'s essential for buttons, animations, and dynamic content.'
        },
        {
          title: 'Domain & Hosting',
          desc: 'To put your website live on the internet, purchase a domain name and choose a hosting service.'
        },
        {
          title: 'Upload Your Website',
          desc: 'Upload your files to the hosting server. Free services like Vercel, Netlify, or GitHub Pages are available.'
        },
        {
          title: 'Test & Launch',
          desc: 'Check everything - links, images, mobile view. Once satisfied, share your website with the world!'
        }
      ],
      toolsTitle: 'Essential Tools',
      tools: [
        { name: 'VS Code', desc: 'Best editor for writing code' },
        { name: 'Chrome DevTools', desc: 'For debugging websites' },
        { name: 'GitHub', desc: 'To save and share your code' },
        { name: 'Figma', desc: 'For creating designs' }
      ],
      demoTitle: 'Live Demo - Try Your HTML Code',
      runButton: 'Run Code',
      resourcesTitle: 'Learning Resources',
      resources: [
        'W3Schools - Learn HTML, CSS, JavaScript',
        'YouTube - Web Development Tutorials',
        'FreeCodeCamp - Learn coding for free',
        'MDN Web Docs - Comprehensive documentation'
      ]
    }
  }

  const currentContent = content[language]

  const runCode = () => {
    const demoOutput = document.getElementById('demo-output')
    if (demoOutput) {
      demoOutput.innerHTML = htmlCode
    }
  }

  return (
    <div className="container">
      <div className="hero">
        <h1>{currentContent.title}</h1>
        <p>{currentContent.subtitle}</p>

        <div className="language-toggle">
          <button
            className={language === 'hi' ? 'active' : ''}
            onClick={() => setLanguage('hi')}
          >
            ‡§π‡§ø‡§Ç‡§¶‡•Ä
          </button>
          <button
            className={language === 'en' ? 'active' : ''}
            onClick={() => setLanguage('en')}
          >
            English
          </button>
        </div>
      </div>

      <div className="content-section">
        <h2>{currentContent.intro}</h2>
        <p>{currentContent.introText}</p>

        <div className="code-section">
          <pre>{`<!DOCTYPE html>
<html>
  <head>
    <title>My First Website</title>
  </head>
  <body>
    <h1>Welcome!</h1>
    <p>This is my first website.</p>
  </body>
</html>`}</pre>
        </div>
      </div>

      <div className="content-section">
        <h2>{currentContent.stepsTitle}</h2>
        <div className="steps-grid">
          {currentContent.steps.map((step, index) => (
            <div key={index} className="step-card">
              <h3>
                <span className="step-number">{index + 1}</span>
                {step.title}
              </h3>
              <p>{step.desc}</p>
            </div>
          ))}
        </div>
      </div>

      <div className="content-section">
        <h2>{currentContent.toolsTitle}</h2>
        <div className="tools-grid">
          {currentContent.tools.map((tool, index) => (
            <div key={index} className="tool-card">
              <h4>{tool.name}</h4>
              <p>{tool.desc}</p>
            </div>
          ))}
        </div>
      </div>

      <div className="content-section">
        <h2>{currentContent.demoTitle}</h2>
        <div className="interactive-demo">
          <textarea
            value={htmlCode}
            onChange={(e) => setHtmlCode(e.target.value)}
            placeholder="Enter your HTML code here..."
          />
          <button className="run-btn" onClick={runCode}>
            ‚ñ∂ {currentContent.runButton}
          </button>
          <div className="demo-output" id="demo-output">
            <p style={{color: '#999', textAlign: 'center'}}>
              {language === 'hi' ? '‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§Ø‡§π‡§æ‡§Å ‡§¶‡§ø‡§ñ‡•á‡§ó‡§æ...' : 'Output will appear here...'}
            </p>
          </div>
        </div>
      </div>

      <div className="content-section">
        <h2>{currentContent.resourcesTitle}</h2>
        <ul className="resources-list">
          {currentContent.resources.map((resource, index) => (
            <li key={index}>{resource}</li>
          ))}
        </ul>
      </div>

      <div style={{textAlign: 'center', padding: '40px 0', color: 'white'}}>
        <p>{language === 'hi'
          ? '¬© 2024 - ‡§∂‡•Å‡§≠‡§ï‡§æ‡§Æ‡§®‡§æ‡§è‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§µ‡•á‡§¨ ‡§°‡•á‡§µ‡§≤‡§™‡§Æ‡•á‡§Ç‡§ü ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è! üöÄ'
          : '¬© 2024 - Best wishes for your web development journey! üöÄ'
        }</p>
      </div>
    </div>
  )
}
